@using DataAccess.ViewModel;
@model AdminDashboard

<div class="row justify-content-center mb-5 pb-5">
    <div class="row my-4 mx-0 col-xl-6 col-md-8 col-11">
        <p class="col fs-4 fw-bold pb-0 mb-0 d-inline">Timesheets</p>
        <div class="col mb-0 text-end">
          @*   <a class="text-decoration-none text-info rounded border border-info p-2" onclick="LoadDashboard()">
                <i class="bi bi-chevron-left text-info"></i>
                Back
            </a> *@
        </div>
    </div>

    <div class="m-3 shadow col-xl-6 col-md-8 col-11">
        <div class="mx-2">
            <div class="d-inline d-md-flex align-items-center justify-content-between">
                <div class="d-flex ms-2 mt-3 mb-1"> 
                    <div class="form-floating mt-3 mb-1">
                        <select id="physician" t class="form-select">
                            @foreach (var i in Model.Physicians)
                            {
                                <option value="@i.Physicianid">@i.Firstname @i.Lastname</option>
                            }
                        </select>
                        <label for="physician" class="floatingLabel"> Search by Physician </label>
                    </div>
                    <div class="form-floating mt-3 mb-1 ms-3">
                        <select class="form-select regionDropDown dark-background-div" id="dateDropdown"></select>
                        <label for="dateDropdown" class="floatingLabel"> Search by Timesheetperiod </label>
                    </div>
                </div>
            </div>

            <div id="timeSheet">
                <p class="text-secondary">No Record(s) Found</p>
            </div>
        </div>
    </div>
</div>

<script>
  
    var start = moment();

    function generateDateRangesForYear() {
        let dropdown = document.getElementById("dateDropdown");
        let currentDate = moment().subtract(1, 'year').startOf('month');
        let today = moment().startOf('day');
        let dateIntervals = [];

        while (currentDate <= today) {
            let startDate = moment(currentDate);
            let endDate;
            if (startDate.date() <= 15) {
                endDate = moment(currentDate).date(15);
            } else {
                startDate.startOf('month').add(15, 'days');
                endDate = moment(currentDate).endOf('month');
            }

            let startDateString = startDate.format("YYYY/MM/DD");
            let endDateString = endDate.format("YYYY/MM/DD");
            let optionText = startDateString + ' - ' + endDateString;
            dateIntervals.push(optionText);

            currentDate = endDate.add(1, 'day');
        }

        for (let i = dateIntervals.length - 1; i >= 0; i--) {
            let option = document.createElement("option");
            option.value = dateIntervals[i];
            option.text = dateIntervals[i];
            dropdown.add(option);
        }

        let initialStartDateString = dateIntervals[dateIntervals.length - 1].split(' - ')[0];
        start = moment(initialStartDateString);
        SearchDataByRange();
    }

    document.getElementById('physician').addEventListener('change', function () {
        SearchDataByRange();
    });

    document.getElementById('dateDropdown').addEventListener('change', function () {
        let selectedOption = this.options[this.selectedIndex].value;
        let startDateString = selectedOption.split(' - ')[0];
        start = moment(startDateString);
        SearchDataByRange();
    });

    $(document).ready(function () {
        generateDateRangesForYear();
    });

    function SearchDataByRange() {
        var startDate = start.format("YYYY-MM-DD");
        var physicianid = $('#physician').val();
        $('#timeSheet').load('@Url.Action("SearchDataByRange", "Admin")?startDate=' + startDate + "&Physicianid=" + physicianid);
    }
</script>