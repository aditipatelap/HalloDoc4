@inject IHttpContextAccessor _httpContextAccessor;
@model DataAccess.ViewModel.Dashboardpage

@{
    ViewData["Title"] = "patientDashboard";
}



<div class="modal fade " id="newrequest" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header bg-info ">
                <h5 class="modal-title text-white" id="exampleModalLabel">Create New Request</h5>
                <button type="button" class="btn-close text-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="mb-3 text-secondary fs-3">
                    Here,I want  to create new request for...
                </div>
                <div class="d-flex justify-content-center mb-5 ">
                    <button type="button" class="btn btn-info btn-lg p-2 px-4 info-button me-2 my-4" id="me" onclick="btnclick1()">Me</button>
                    <button type="button" class="btn btn-outline-info btn-lg p-2 px-4 button-info my-4" id="someone" onclick="btnclick2()">SomeOne Else</button>
                </div>
                <div class="d-flex justify-content-end">
                    <button type="button" class="btn btn-info btn-lg p-2 px-4 me-3 info-button me-2 " id="continue" onclick="continueclick()">Continue</button>
                    <button type="button" class="btn btn-outline-info btn-lg p-2 px-4 button-info" data-bs-dismiss="modal">Cancel</button>
                </div>

            </div>

        </div>
    </div>
</div>
@await Html.PartialAsync("_Dashboardheader")
<div class="tab d-flex  shadow mt-1 ms-1  ">
    <p class="tab-links active-link" onclick="opentab('Dashboard')">Dashboard</p>
    <p class="tab-links" onclick="opentab('Profile')">Profile</p>

</div>
<div id="Dashboard" class="tab-contents active-tab ">
    <h4 class="mt-5 ms-4">Medical History</h4>
    <div class="container-fluid m-3 bg-light">
        <div class="d-flex justify-content-end  me-4 mt-4">
            <button type="button" class="btn btn-outline-info d-none d-md-block  button-info" data-bs-toggle="modal" data-bs-target="#newrequest">Create New Request</button>
            <button type="button" class="d-block d-md-none hoverbtn btn btn-outline-info float-end " data-bs-toggle="modal" data-bs-target="#newrequest"><i class="text-info fa fa-plus"></i></button>
        </div>
        <div class="d-none d-md-block">
            <table class="table table-responsive  mt-3 p-3 ">
                <thead class="table-secondary">
                    <tr>
                        <th scope="col">Created Date <i class="bi bi-arrow-down"></i></th>
                        <th scope="col">Current Status</th>

                        <th scope="col">Document</th>
                    </tr>
                </thead>
                <tbody>


                    @if (Model != null)
                    {
                        @foreach (var items in Model.Dashboard)
                        {


                            <tr>
                                <td>@items.createddate.ToString().Split(' ')[0]</td>
                                <td>@items.Status</td>

                                <td class="text-dark">
                                    @if (items.Fcount != 0)
                                    {
                                        <button class="btn btn-outline-info " onclick="location.href='@Url.Action("Document", "Patient_Site",new {id=items.id})'">
                                            (@items.Fcount) Document
                                        </button>
                                    }
                                </td>


                            </tr>
                        }
                    }
                </tbody>

            </table>
        </div>

         <div class="d-block d-md-none z-0">
            <div class="accordion" id='accordion'>
                @foreach (var item in Model.Dashboard)
                {
                    <div class="accordion-item">
                        <h2 class="accordion-header " id="panelsStayOpen-headingTwo">
                            <button class="smallscrbtn accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#panelsStayOpen-collapseTwo" aria-expanded="false" aria-controls="panelsStayOpen-collapseTwo">
                                <h6 class="text-black me-3 mt-1"><i class="bi bi-clock  me-2 text-info"></i>Created Date: </h6>
                                <span class="">@item.createddate.Month &nbsp;@item.createddate.Day,@item.createddate.Year</span>
                            </button>
                        </h2>
                        <div id="panelsStayOpen-collapseTwo" class="accordion-collapse collapse" aria-labelledby="panelsStayOpen-headingTwo">
                            <div class="accordion-body">
                                <span><i class="bi bi-person-video  me-2 text-info"></i> Provider: @_httpContextAccessor.HttpContext.Session.GetString("PatientName")</span>
                                <br>
                                <span><i class="bi bi-check-circle  me-2 text-info"></i> Current Status:  @item.Status </span>
                                <br>
                                <span>
                                    @if (item.Fcount != 0)
                                    {
                                        <button class="btn-back btn btn-outline-info w-100" onclick="location.href='@Url.Action("ViewDoc", "Patient",new {reqid=item.id})'">
                                            (@item.Fcount) Document
                                        </button>
                                    }

                                </span>
                            </div>
                        </div>
                    </div>
                }
            </div>

        </div>
    
    </div>



    @*<tbody class="table-group-divider mx-5">
    @if (ViewBag.listofrequest != null)
    {
    @foreach (var item in ViewBag.listofrequest)
    {
    <tr>
    <td scope="row"> @item.CreatedDate</td>
    <td>@item.Status</td>
    <td>
    </td>
    </tr>
    }
    }
    </tbody>*@
</div>
<div id="Profile" class="tab-contents">
   @await Html.PartialAsync("Profile")
</div>





<script>
    var tablinks = document.getElementsByClassName("tab-links");
    var tabcontents = document.getElementsByClassName("tab-contents");

    function opentab(tabname) {
        for (tablink of tablinks) {
            tablink.classList.remove("active-link");
        }
        for (tabcontent of tabcontents) {
            tabcontent.classList.remove("active-tab");
        }
        event.currentTarget.classList.add("active-link");
        document.getElementById(tabname).classList.add("active-tab");

    }

</script>

<script>


    var btnval1 = 0;
    var btnval2 = 0;
    function btnclick1() {
        btnval1 = 1;
        console.log(btnval1);
    }

    function btnclick2() {
        btnval2 = 1;
        console.log(btnval2);
    }

    function continueclick() {
        if (btnval1 ==1) {
            var url = '@Url.Action("Information", "Patient_Site")';
            window.location.href = url;
        }

        if (btnval2 == 1) {
            var url = '@Url.Action("Someonelse", "Patient_Site")';
            window.location.href = url;
        }

    }
</script>



<script>
    const phoneInputField = document.querySelectorAll("input[type='tel']");
    for (var i = 0; i < phoneInputField.length; i++) {
        const phoneInput = window.intlTelInput(phoneInputField[i], {
            utilsScript:
                "https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.8/js/utils.js",
        });
    }
    $(window).on('load', function () {
        $('#myModal').modal('show');
    });
</script>
<script>


    function editDetails() {

        var inputs = document.getElementsByTagName("input");
        for (var i = 0; i < inputs.length; i++) {
            inputs[i].disabled = false;
        }

        var selects = document.getElementsByTagName("select");
        for (var i = 0; i < selects.length; i++) {
            selects[i].disabled = false;
        }

        var editBtn = document.getElementById("editBtn");
        editBtn.style.display = "none";

        var saveBtn = document.getElementById("saveBtn");
        saveBtn.style.display = "block";

        var cancelBtn = document.getElementById("cancelBtn");
        cancelBtn.style.display = "block";


    }


</script>


